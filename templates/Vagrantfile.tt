Vagrant::Config.run do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "<%= config[:box_name] %>"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  <% if config[:box_url].nil? %># <% end %>config.vm.box_url = "<%= config[:box_url] || "http://domain.com/path/to/above.box" %>"

  # Boot with a GUI so you can see the screen. (Default is headless)
  # config.vm.boot_mode = :gui

  # Assign this VM to a host only network IP, allowing you to access it
  # via the IP.
  config.vm.network "33.33.33.10"

  # Forward a port from the guest to the host, which allows for outside
  # computers to access the VM, whereas host only networking does not.
<% if config[:forward_ports]
  config[:forward_ports].each do |service, ports| -%>
  config.vm.forward_port "<%= service %>", <%= ports[0] %>, <%= ports[1] %>
<% end -%>
<% else -%>
  # config.vm.forward_port "http", 80, 8080
<% end -%>

  # Share an additional folder to the guest VM. The first argument is
  # an identifier, the second is the path on the guest to mount the
  # folder, and the third is the path on the host to the actual folder.
  # config.vm.share_folder "v-data", "/vagrant_data", "../data"
  config.vm.share_folder "v-root", "/vagrant", "."

  # Customize the virtual machine created by Vagrant. This allows you to
  # add more virtual cores, reserve additional RAM, and change the name
  # of the created machine. See http://vagrantup.com/docs/vagrantfile.html
  #
  # config.vm.customize do |vm|
  #   vm.memory_size = 1024
  #   vm.cpu_count   = 4
  # end

  # Enable provisioning with chef solo, specifying a cookbooks path (relative
  # to this Vagrantfile), and adding some recipes and/or roles.
  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = "<%= config[:cookbooks_path] %>"
    chef.roles_path     = "<%= config[:roles_path] %>"

<% config[:components].each do |c|
  c.roles.each do |r| -%>
    chef.add_role "<%= r.name %>"
<% end
end -%>

    # You may also specify custom JSON attributes:
    #
    # chef.json.merge! \
    #  :key => :value
    #  ...
  end
end
